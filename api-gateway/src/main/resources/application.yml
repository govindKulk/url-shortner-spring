server:
  port: 8080

# Example route config (to be updated as you add services)
spring:
  application:
    name: api-gateway
  # cloud is the namespace for the gateway

  cloud:
    # gateway is the namespace for the gateway
    gateway:
      server:
        webflux:
          routes:
            - id: user-service
              uri: lb://user-service
              predicates:
                - Path=/api/auth/**
            - id: url-service
              uri: lb://url-service
              predicates:
                - Path=/api/urls/**, /[a-zA-Z0-9]+
          globalcors:
            cors-configurations:
              '[/**]':
                allowed-origins: ["http://localhost:3000", "https://url-shortner-spring.vercel.app"]
                allowed-methods:
                  - GET
                  - POST
                  - PUT
                  - DELETE
                  - OPTIONS
                allowed-headers: "*"
                allow-credentials: true

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/urlshortener}
    username: ${DB_USER:user}
    password: ${DB_PASS:password}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka}

# JWT Configuration (fallback)
jwt:
  secret: ${JWT_SECRET:my-super-secret-jwt-key-that-is-at-least-32-characters-long}
  access-token-expiration: ${JWT_ACCESS_TOKEN_EXPIRATION:900000}
  refresh-token-expiration: ${JWT_REFRESH_TOKEN_EXPIRATION:604800000}
  issuer: ${JWT_ISSUER:url-shortner-application}


